package coda.io

import java.lang.reflect.Array;

import coda.io.Closeable

public interface InputStream implements Closeable {
	
	/**
	 * Reads the next byte of the stream.
	 * @return the read byte
	 */
	public byte read()
	
	/**
	 * Reads all bytes of the stream.
	 * @return all read bytes.
	 */
	public default array<byte> readAll() {
		array bytes = byte[this.available()]
		
		while(this.available() > 0) {
			bytes.set(bytes.getLength() - (this.available()), this.read())
		}
		
		return bytes
	}
	
	/**
	 * @return the amount of available bytes in the stream.S
	 */
	public int available()
	
}